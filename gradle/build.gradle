/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

plugins {
  // https://ysb33rorg.gitlab.io/packer-gradle-plugin/0.3/docs/product-documentation.html
  id 'org.ysb33r.packer.base'  version '0.3'
  id 'org.ysb33r.packer'       version '0.3'
  
  // https://bmuschko.github.io/gradle-docker-plugin/
  id 'com.bmuschko.docker-remote-api' version '4.9.0'
  
  // http://jruby-gradle.org/base/
  id "com.github.jruby-gradle.base" version "1.7.0"
}

// Import task types
import org.ysb33r.gradle.packer.tasks.*
import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*
import com.github.jrubygradle.JRubyExec

packer {
    executable path : '/home/apollo/bin/packer'
}

dependencies {
    /* We need RSpec gems from rubygems.org to run RSpec */
    jrubyExec group: 'rubygems', name: 'serverspec', version: '2.41.3+'
    jrubyExec group: 'rubygems', name: 'docker-api', version: '1.34.2+'
}





ext.docker_username = "apolloclark"
ext.package_name    = "nodejs"
ext.package_version = "11"





task('all') {
    description = 'Clean, build, test, and deploy.'
    dependsOn 'test'
}
task('preview') {
    description = 'Clean, build, test.'
	dependsOn 'testUbuntu16'
    dependsOn 'testCentos7'
}
task('previewParallel') {
    description = 'Clean, build, test.'
	dependsOn 'cleanUbuntu16'
    dependsOn 'cleanCentos7'
	dependsOn 'buildUbuntu16'
    dependsOn 'buildCentos7'
	dependsOn 'testUbuntu16'
    dependsOn 'testCentos7'
}
task('previewParallel2') {
    description = 'Clean, build, test.'
	// dependsOn 'build'
    dependsOn 'test'
}
task('previewParallel3', type: GradleBuild) {
    description = 'Clean, build, test.'
	tasks = ['clean','build','test']
}





task('clean') {
    description = 'Clean any previously built images and containers.'
    dependsOn 'cleanUbuntu16'
    dependsOn 'cleanCentos7'
}

task('cleanUbuntu16', type: GradleBuild) {
    description = 'Clean any previously built Ubuntu 16.04 images and containers.'
    tasks = ['cleanUbuntu16Image','cleanUbuntu16Container']
}

task('cleanUbuntu16Image', type: DockerRemoveImage) {
    description = 'Clean any previously built Ubuntu 16.04 images.'
    targetImageId "$docker_username/$package_name:$package_version-ubuntu16.04"
    force = true
    onError { exception ->
        // Ignore exception if container does not exist otherwise throw it
        if (!exception.message.contains('No such image'))
            throw exception
    }
}

task('cleanUbuntu16Container', type: DockerRemoveContainer) {
    description = 'Clean any previously built Ubuntu 16.04 containers.'
    targetContainerId "$package_name-ubuntu16.04"
    force = true
    removeVolumes = true
    onError { exception ->
        // Ignore exception if container does not exist otherwise throw it
        if (!exception.message.contains('No such container'))
            throw exception
    }
}

task('cleanCentos7', type: GradleBuild) {
    description = 'Clean any previously built Centos 7 images and containers.'
    tasks = ['cleanCentos7Image','cleanCentos7Container']
}

task('cleanCentos7Image', type: DockerRemoveImage) {
    description = 'Clean any previously built Centos 7 images.'
    targetImageId "$docker_username/$package_name:$package_version-centos7.6"
    force = true
    onError { exception ->
        // Ignore exception if container does not exist otherwise throw it
        if (!exception.message.contains('No such image'))
            throw exception
    }
}

task('cleanCentos7Container', type: DockerRemoveContainer) {
    description = 'Clean any previously built Centos 7 containers.'
    targetContainerId "$package_name-centos7.6"
    force = true
    removeVolumes = true
    onError { exception ->
        // Ignore exception if container does not exist otherwise throw it
        if (!exception.message.contains('No such container'))
            throw exception
    }
}





task('build') {
    description = 'Build the Docker images, using Ubuntu 16.04 and Centos 7.6.'
	dependsOn 'buildUbuntu16'
	dependsOn 'buildCentos7'
}

task('buildUbuntu16', type: PackerBuilder) {
    description = 'Build the Docker image, using Ubuntu 16.04'
	dependsOn 'cleanUbuntu16'

    setEnvironment System.getenv()
    environment DOCKER_USERNAME : "$docker_username"
    environment PACKAGE         : "$package_name"
    environment PACKAGE_VERSION : "$package_version"
    environment BASE_IMAGE      : 'ubuntu:16.04'
    environment IMAGE_NAME      : 'ubuntu16.04'

    force true
    buildDir = './'
    template  'packer_docker.json'
    outputDir "${buildDir}"
}

task('buildCentos7', type: PackerBuilder) {
    description = 'Build the Docker image, using Centos 7.'
	dependsOn 'cleanCentos7'

    setEnvironment System.getenv()
    environment DOCKER_USERNAME : "$docker_username"
    environment PACKAGE         : "$package_name"
    environment PACKAGE_VERSION : "$package_version"
    environment BASE_IMAGE      : 'centos:7.6.1810'
    environment IMAGE_NAME      : 'centos7.6'

    force true
    buildDir = './'
    template  'packer_docker.json'
    outputDir "${buildDir}"
}





task('test') {
    description = 'Test the Docker images, built with Ubuntu 16.04 and Centos 7.'
    dependsOn 'testUbuntu16'
	dependsOn 'testCentos7'
}

task('testUbuntu16',type: JRubyExec) {
    group = 'Build'
    description = 'Test the Docker image, built with Ubuntu 16.04.'
	dependsOn 'buildUbuntu16'

    setEnvironment System.getenv()
    environment DOCKER_USERNAME : "$docker_username"
    environment PACKAGE         : "$package_name"
    environment PACKAGE_VERSION : "$package_version"
    environment IMAGE_NAME      : 'ubuntu16.04'

    group 'JRuby'
    description 'Execute the RSpecs in JRuby'
    jrubyArgs '-S'
    workingDir 'spec'
    script 'Dockerfile_ubuntu16.04.rb'
}

task('testCentos7',type: JRubyExec) {
    group = 'Build'
    description = 'Test the Docker image, built with Centos 7.'
	dependsOn 'buildCentos7'

    setEnvironment System.getenv()
    environment DOCKER_USERNAME : "$docker_username"
    environment PACKAGE         : "$package_name"
    environment PACKAGE_VERSION : "$package_version"
    environment IMAGE_NAME      : 'centos7.6'

    group 'JRuby'
    description 'Execute the RSpecs in JRuby'
    jrubyArgs '-S'
    workingDir 'spec'
    script 'Dockerfile_ubuntu16.04.rb'
}


/*
task('publish'){
}
*/